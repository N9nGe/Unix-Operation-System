<=========================================================>
<=================>    BUG LOG HEADER   <=================>
<=========================================================>
Assignment:
    MP3
CheckPoint:
    CP1
SCOPE:
    keyboard and PIC
CreateTime:
    2022.10.15

<--------------------------------------------------------->
                          BUG 0                          
<--------------------------------------------------------->
Time:
    2022.10.15.
Creator:
    JIE WANG.
Description:
    Keyboard can't connect to the PIC.
Solution:
    1. call keyboard_init() in kernel.c
    2. construct handler_linkage in x86
    3. SET_IDT_ENTRY at idt.c


<--------------------------------------------------------->
                          BUG 1                          
<--------------------------------------------------------->
Time:
    2022.10.15.
Creator:
    Gabriel Gao.
Description:
    After we finish GTD and IDT, when we try to boot our kernel, there is a infinite loop in the start page. We cannot 
    boot successfully. We do not initiliza and load IDT inside the boot.S.
Solution:
    Just call the idt_init function in idt.c to initialize the idt and lidt the idt_desc_ptr


<--------------------------------------------------------->
                          BUG 2                         
<--------------------------------------------------------->
Time:
    2022.10.16.
Creator:
    JIE WANG.
Description:
    PIC can't connect to the RTC, only 1 times interrupt
Solution:
    The send_eoi function of PIC has a bug:
    I forget to minus 8 for slave irq_num.
    After finishing it, it's fine

<--------------------------------------------------------->
                          BUG 3                          
<--------------------------------------------------------->
Time:
    2022.10.17.
Creator:
    JIE WANG.
Description:
    The keyboard has already connect to the PIC, but can't
    output value.
Solution:
    The scancode set is wrong, with some shifting problem.
    I asked TA, and construct a new scancode set refering to
    the Intel X30 mannul

<--------------------------------------------------------->
                          BUG 4                          
<--------------------------------------------------------->
Time:
    2022.10.17.
Creator:
    JIE WANG.
Description:
    Sometimes, I can't boot my OS,it says: .
Solution:
    Most likely it's an issue with windows messing around 
    with the line endings of debug.sh
    1. dos2unix debug.sh
    2. chmod +x debug.sh

<--------------------------------------------------------->
                          BUG 5                          
<--------------------------------------------------------->
Time:
    2022.10.17.
Creator:
    Gabriel Gao
Description:
    The RTC interrupt just run once. The problem is that after the interrupt, we use the wrong Register C value. We add 
    the NMI_MASK into the outb function. 
Solution:
    Remove the mask of the Register C.
    Old:     outb(RTC_C_OFFSET | NMI_MASK, RTC_PORT_INDEX);
    Correct: outb(RTC_C_OFFSET, RTC_PORT_INDEX);

<--------------------------------------------------------->
                          BUG 6                          
<--------------------------------------------------------->
Time:
    2022.10.17.
Creator:
    JIE WANG.
Description:
    The keyboard can't continuously enter the interrupt,
    when it release, it will bring an empty space.
Solution:
    I specify the key-value field first.
    And I ignore the release key interrupt
    so it works fine

<--------------------------------------------------------->
                          BUG 7                         
<--------------------------------------------------------->
Time:
    2022.10.15.
Creator:
    YIMING ZHAO.
Description:
    Keyboard interrupt invoked exception due to incorrect
    IDT mapping and mix use hex and decimal for idt index
Solution:
    change the idt index of keyboard interrupt to hexadecimal

<--------------------------------------------------------->
                          BUG 8                         
<--------------------------------------------------------->
Time:
    2022.10.16.
Creator:
    YIMING ZHAO.
Description:
    Interrupts from keyboard and RTC cause general protection fault
    exception
Solution:
    I have to set the corresponding interrupt handler's reserved3
    to 0 when initializing the IDT


    <=========================================================>
    <=================>    BUG LOG HEADER   <=================>
    <=========================================================>
    Assignment:
        MP3
    CheckPoint:
        CP2
    CreateTime:
        2022.10.20
<--------------------------------------------------------->
                          BUG X                          
<--------------------------------------------------------->
Time:
    2022.10.22.
Creator:
    Gabriel Gao
Description:
    The variable used to store the current frequency of the rtc is not the actural frequency. It is the temp rate
    used to convert the frequency to the rate.
Solution:
    Use a global variable of the current_freq and use the freq directly to check whether it belongs to the the power of 
    2. And only change the current_freq when initializing the rtc or giving a valid input rtc frequency (2~8126Hz) and 
    set successfully.

<--------------------------------------------------------->
                          BUG X                         
<--------------------------------------------------------->
Time:
    2022.10.22.
Creator:
    Jerry Wang.
Description:
    - read data shows garbage characters on the screen
    Why:
    - I changed the entry array in data block to size 4096 but I forgot
    to change the size of each entry
    - thus when I indexed into the data block it indexed to a random address
    that stores garbage values
Solution:
    - changed the size of each entry in the entry array from uint32_t to uint8_t



<--------------------------------------------------------->
                          BUG X                         
<--------------------------------------------------------->
Time:
    2022.10.22.
Creator:
    Jerry Wang.
Description:
    - read data displayed nothing on the screen after I fixed the previous bug
    Why:
    - the index of the data_block_ptr was incorrect
    - the correct index is actually the index plus 1
Solution:
    - change the data_block_ptr from inode_ptr + 63 to inode_ptr + 64

<--------------------------------------------------------->
                          BUG X                         
<--------------------------------------------------------->
Time:
    2022.10.22.
Creator:
    Jerry Wang.
Description:
    - a strange character is displayed at the end of the file name of
    verylargetextwithverylongname.txt
    Why:
    - I created a buffer of 32B for the file name, but there should be
    an extra byte for '\0' to indicate the end of the string
Solution:
    - set the size of the buffer to 33B so there is an extra byte for '\0'


<--------------------------------------------------------->
                          BUG X                         
<--------------------------------------------------------->
Time:
    2022.10.21.
Creator:
    Yiming Zhao.
Description:
    - inode number derived from boot_block is +3 larger than the actual
      index in the inode array
    - 
Solution:
    - use boot_block_ptr + 1 instead of fs_start + 4096

<--------------------------------------------------------->
                          BUG X                         
<--------------------------------------------------------->
Time:
    2022.10.22.
Creator:
    Yiming Zhao.
Description:
    - terminal ls output an incorrect file name string
    due to incorrect use string copy
Solution:
    - use boot_block_ptr + 1 instead of fs_start + 4096


<--------------------------------------------------------->
                          BUG X                          
<--------------------------------------------------------->
Time:
    2022.10.21.
Creator:
    JIE WANG.
Description:
    Keyboard:  symbol ' and backspace is wrong
Solution:
    - the mapping of single quate is wrong, since there is some C syntax difference,
    I use a macro #define to record its correct ascii value.
    - I modify the putc logic, develop it into putc_advance

<--------------------------------------------------------->
                          BUG X                          
<--------------------------------------------------------->
Time:
    2022.10.22.
Creator:
    Tony & Gabriel
Description:
    - backspace firstly delete a strange space, then delete the target character
    - backspace can't delete the character at the left side of screen_x, it will display
    a \b instead
Solution:
    - The order between screen_x-- and backspacee() is wrong, I exchange them, and it's fine
    - 

<--------------------------------------------------------->
                          BUG X                          
<--------------------------------------------------------->
Time:
    2022.10.23.
Creator:
    Tony.
Description:
    Scrolling will meet with paging error.
Solution:
    Because the screen_y boundary is set wrong, I previously
    messed up with NUM_ROWS and NUM_COLS, this cause many 
    misunderstanding on it.

<--------------------------------------------------------->
                          BUG X                          
<--------------------------------------------------------->
Time:
    2022.10.23.
Creator:
    Tony.
Description:
    
Solution:
    ....

<--------------------------------------------------------->
                          BUG X                          
<--------------------------------------------------------->
Time:
    2022.10.23.
Creator:
    Gabriel & Tony
Description:
    After press the enter, and then press the backspace to delete the empty Keyboard buffer. Normally, it should
    do nothing because the buffer is empty. However, our cursor goes back to the end of the last line.
Solution:
    We forget to return after we consider the cases. Actually, when we press the enter, \n is put into the buffer.
    but we have no need to consider backspace this case. Because after press the \n we should clear all stuff in the 
    buffer.

<--------------------------------------------------------->
                          BUG X                          
<--------------------------------------------------------->
Time:
    2022.10.24.
Creator:
    Gabriel Gao
Description:
    For print the string, there is a '\0' existing. We need to ignore this case by using putc
Solution:
    Just add if statement to jump over this case.
